/*
 *
 *  MIT License
 *
 *  (C) Copyright [2022-2023] Hewlett Packard Enterprise Development LP
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 *  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 *  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 *  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *  OTHER DEALINGS IN THE SOFTWARE.
 *
 */
@Library('csm-shared-library') _

def credentialsId = 'artifactory-algol60'
pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "5"))
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
        timestamps()
    }

    environment {
        SUFFIX = "${env.JOB_BASE_NAME.replaceAll("%2F", "-").toLowerCase()}-${env.BUILD_NUMBER}"
        DOCKER_REGISTRY = "https://artifactory.algol60.net/csm-docker/stable"
    }

    stages {
        stage('Validate x86_64 & aarch64') {
            parallel {
                stage('Validate x86') {
                    stages {
                        stage('Setup Docker Cache') {
                            steps {
                                withCredentials([usernamePassword(credentialsId: credentialsId, usernameVariable: 'ARTIFACTORY_USER', passwordVariable: 'ARTIFACTORY_TOKEN')]) {
                                    sh "docker login ${env.DOCKER_REGISTRY} --username \$ARTIFACTORY_USER --password \$ARTIFACTORY_TOKEN"
                                    sh "./scripts/update-package-versions.sh -a x86_64 --refresh --no-cache --suffix ${env.SUFFIX}"
                                    sh "./scripts/update-package-versions.sh -a x86_64 --compute --refresh --no-cache --suffix ${env.SUFFIX}"
                                }
                            }
                        }

                        stage('Validate base packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/cloud-init.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/libvirt.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/qemu-agent.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/suse.x86_64.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/google/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/metal/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate csm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/csm.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate user packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p vars/packages/user.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate compute packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/compute/packages.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/compute/packages.suse.x86_64.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate ncn packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/ncn/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/ncn_google/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/ncn_metal/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate fawkes-live packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/fawkes_live/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate hypervisor packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/hypervisor/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate kubernetes-vm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/kubernetes_vm/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate management-vm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/management_vm/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate pre-install-toolkit packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/pre_install_toolkit/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate kubernetes packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/kubernetes/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/kubernetes_metal/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate storage-ceph packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a x86_64 -p group_vars/storage_ceph/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }
                    }
                }
                stage('Validate aarch64') {
                    agent {
                        label "metal-gcp-builder-arm64"
                    }

                    stages {
                        stage('Setup Docker Cache') {
                            steps {
                                withCredentials([usernamePassword(credentialsId: credentialsId, usernameVariable: 'ARTIFACTORY_USER', passwordVariable: 'ARTIFACTORY_TOKEN')]) {
                                    sh "docker login ${env.DOCKER_REGISTRY} --username \$ARTIFACTORY_USER --password \$ARTIFACTORY_TOKEN"
                                    sh "./scripts/update-package-versions.sh -a aarch64 --refresh --no-cache --suffix ${env.SUFFIX}"
                                    sh "./scripts/update-package-versions.sh -a aarch64 --compute --refresh --no-cache --suffix ${env.SUFFIX}"
                                }
                            }
                        }

                        stage('Validate base packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/cloud-init.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/libvirt.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/qemu-agent.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/suse.aarch64.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/google/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/metal/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate csm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/csm.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate user packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p vars/packages/user.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate compute packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/compute/packages.suse.yml --compute --validate --suffix ${env.SUFFIX}"
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/compute/packages.suse.aarch64.yml --compute --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate fawkes-live packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/fawkes_live/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate hypervisor packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/hypervisor/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate kubernetes-vm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/kubernetes_vm/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }

                        stage('Validate management-vm packages') {
                            steps {
                                sh "./scripts/update-package-versions.sh -a aarch64 -p group_vars/management_vm/packages.suse.yml --validate --suffix ${env.SUFFIX}"
                            }
                        }
                    }
                }
            }
        }
    }
}
