#
# MIT License
#
# (C) Copyright 2023-2024 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
- name: Check if RUN_OSCAP is set and true
  ansible.builtin.set_fact:
    run_oscap: "{{ RUN_OSCAP | default(true) | bool }}"

- name: Create temporary files if RUN_OSCAP is not true
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
  when: not run_oscap
  loop: "{{ oval_files }}"

- name: Exit playbook if RUN_OSCAP is not true
  ansible.builtin.meta: end_play
  when: not run_oscap

- name: Set OS version variables
  set_fact:
    os_version_major: "{{ ansible_facts['distribution_version'].split('.')[0] | lower }}"
    os_version_minor: "{{ ansible_facts['distribution_version'].split('.')[1] | lower }}"

- name: Perform OVAL tests and generate reports
  block:
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
      register: temp_dir

    - name: Download OVAL file
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ temp_dir.path }}/{{ item.result_file }}.bz2"
        headers:
          HTTPS_PROXY: "{{ lookup('env', 'HTTPS_PROXY') }}"
      loop: "{{ oval_urls }}"
      register: download_results

    - name: Run OVAL eval and generate report
      ansible.builtin.shell: |
        oscap oval eval --skip-valid --results {{ item.result_file }} {{ temp_dir.path }}/{{ item.result_file }}.bz2 > {{ item.stdout_file }}
        oscap oval generate report --output {{ item.report_file }} {{ item.result_file }}
        mv {{ item.result_file }} {{ item.report_file }} /tmp
      loop: "{{ oval_urls }}"
      when: download_results.results | selectattr('failed', 'eq', false) | list | length == 2

    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent
  when: run_oscap